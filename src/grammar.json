{
  "name": "brightscript",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_definition"
      }
    },
    "_definition": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "sub_definition"
        },
        {
          "type": "SYMBOL",
          "name": "function_definition"
        }
      ]
    },
    "_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "print_statement"
        },
        {
          "type": "SYMBOL",
          "name": "return_statement"
        },
        {
          "type": "SYMBOL",
          "name": "newline"
        }
      ]
    },
    "_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "parenthesized_expression"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "literal"
        }
      ]
    },
    "function_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "function"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "parameter_list"
        },
        {
          "type": "SYMBOL",
          "name": "return_type"
        },
        {
          "type": "SYMBOL",
          "name": "block"
        },
        {
          "type": "STRING",
          "value": "end function"
        }
      ]
    },
    "sub_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "sub"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "parameter_list"
        },
        {
          "type": "SYMBOL",
          "name": "block"
        },
        {
          "type": "STRING",
          "value": "end sub"
        }
      ]
    },
    "if_statement": {
      "type": "SEQ",
      "members": []
    },
    "for_statement": {
      "type": "SEQ",
      "members": []
    },
    "while_statement": {
      "type": "SEQ",
      "members": []
    },
    "print_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "print"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "return_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "return"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "assignment_statement": {
      "type": "SEQ",
      "members": []
    },
    "block": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_statement"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        }
      ]
    },
    "parameter_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "parameter"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "STRING",
                        "value": ","
                      },
                      {
                        "type": "SYMBOL",
                        "name": "parameter"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "parameter": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "as"
                },
                {
                  "type": "SYMBOL",
                  "name": "type_specifier"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "return_type": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "as"
        },
        {
          "type": "SYMBOL",
          "name": "type_specifier"
        }
      ]
    },
    "type_specifier": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "boolean"
        },
        {
          "type": "STRING",
          "value": "integer"
        },
        {
          "type": "STRING",
          "value": "float"
        },
        {
          "type": "STRING",
          "value": "double"
        },
        {
          "type": "STRING",
          "value": "string"
        },
        {
          "type": "STRING",
          "value": "object"
        },
        {
          "type": "STRING",
          "value": "dynamic"
        },
        {
          "type": "STRING",
          "value": "void"
        }
      ]
    },
    "call_expression": {
      "type": "SEQ",
      "members": []
    },
    "binary_expression": {
      "type": "SEQ",
      "members": []
    },
    "unary_expression": {
      "type": "SEQ",
      "members": []
    },
    "parenthesized_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "boolean"
        },
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        }
      ]
    },
    "boolean": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    },
    "number": {
      "type": "PATTERN",
      "value": "\\d+(\\.\\d+)?"
    },
    "string": {
      "type": "PATTERN",
      "value": "\"[^\"]*\""
    },
    "newline": {
      "type": "PATTERN",
      "value": "\\r?\\n"
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "binary_operator": {
      "type": "CHOICE",
      "members": []
    },
    "unary_operator": {
      "type": "CHOICE",
      "members": []
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
