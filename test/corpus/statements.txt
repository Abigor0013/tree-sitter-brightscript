==================
Print statement without params
==================

sub x()
    print("hi")
end sub
---

(source_file
  (sub_definition
    (identifier)
    (parameter_list)
    (block
      (print_statement
        (parenthesized_expression
          (literal
            (string
              (string_contents))))))
    (end_sub)))

==================
Print statements with params
==================

sub x(y as string)
    print(y)
end sub
---

(source_file
  (sub_definition
    (identifier)
    (parameter_list
      (parameter
        (identifier)
        (type_specifier)))
    (block
      (print_statement
        (parenthesized_expression
          (identifier))))
    (end_sub)))

==================
Print statements with comma sep params
==================

sub x(y as string, x as string)
    print(x)
end sub
---

(source_file
  (sub_definition
    (identifier)
    (parameter_list
      (parameter
        (identifier)
        (type_specifier))
      (parameter
        (identifier)
        (type_specifier)))
    (block
      (print_statement
        (parenthesized_expression
          (identifier))))
    (end_sub)))

==================
function return type string
==================

function x() as string
    return "hi"
end function
---

(source_file
  (function_definition
    (identifier)
    (parameter_list)
    (return_type
      (type_specifier))
    (block
      (return_statement
        (literal
          (string
            (string_contents)))))
    (end_function)))

==================
empty sub
==================

sub init()
end sub
---

(source_file
  (sub_definition
    (identifier)
    (parameter_list)
    (end_sub)))

==================
Library definition
==================
Library "Roku_Ads.brs"

sub x()
    print("hi")
end sub
---

(source_file
  (library_definition
    (string
      (string_contents)))
  (sub_definition
    (identifier)
    (parameter_list)
    (block
      (print_statement
        (parenthesized_expression
          (literal
            (string
              (string_contents))))))
    (end_sub)))

====================
invalid return statement
====================
function x() as object
    return invalid
end function
---

(source_file
  (function_definition
    (identifier)
    (parameter_list)
    (return_type
      (type_specifier))
    (block
      (return_statement
        (literal
          (invalid))))
    (end_function)))
